cmake_minimum_required( VERSION 3.6 )

cmake_policy(SET CMP0048 NEW) # version handled by project()

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(BUILDER_ROOT ${CMAKE_SOURCE_DIR}/builder )

set(MFX_INCLUDE $ENV{MFX_HOME}/include)
set(MFX_LIB_OPENSOURCE $ENV{MFX_HOME}/lib)
set(MFX_LIB $ENV{MFX_HOME}/lib/lin_x64)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -m64 -msse4.2  -pipe -fPIC -Wall -Wformat -Wformat-security -Wnon-virtual-dtor -Wno-deprecated-declarations -Wno-unknown-pragmas -Wno-unused  -DUNIX -D__USE_LARGEFILE64 -D_FILE_OFFSET_BITS=64 -DLINUX -DLINUX32 -DLINUX64 -DMFX_API_VERSION=\"1.34\" -DMFX_GIT_COMMIT=\"34c7cbbb\" -DMEDIA_VERSION_STR=\"20.3.0\" -g -O3 -std=c++11 -funroll-loops -ftree-vectorize -I${MFX_INCLUDE} -DLIBVA_SUPPORT -DLIBVA_DRM_SUPPORT -DLIBVA_X11_SUPPORT")

set(ENABLE_EXPORTS false)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY  ${CMAKE_SOURCE_DIR}/../bin/)

link_directories(${CMAKE_SOURCE_DIR}/lib)

link_directories( ${MFX_LIB_OPENSOURCE} ${MFX_LIB})

list( APPEND LIBS_VARIANT sample_common )
list( APPEND LIBS_NOVARIANT vpp_plugin )

include_directories (
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${MFX_INCLUDE}/sample_common/include
    ${MFX_INCLUDE}/mfx
    ${MFX_INCLUDE}/vpp_plugin/include
    ${MFX_INCLUDE}/rotate_cpu/include
    /usr/include/libdrm
)

set(DEPENDENCIES itt libmfx pthread dl)

file(GLOB SOURCES
    src/file_and_rtsp_bitstream_reader.cpp
    src/pipeline_transcode.cpp
    src/sample_multi_transcode.cpp
    src/transcode_utils.cpp
    src/vpp_ext_buffers_storage.cpp
    include/pipeline_transcode.h
    include/sample_multi_transcode.h
    include/sample_queue.h
    include/transcode_utils.h
    include/vpp_ext_buffers_storage.h
)

add_executable(video_e2e_sample ${SOURCES})

target_link_libraries(video_e2e_sample avformat avcodec avutil  vpp_plugin sample_common mfx va va-drm drm pthread rt dl)

